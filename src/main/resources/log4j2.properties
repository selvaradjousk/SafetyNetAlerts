
################################################
## Declare loggers
################################################
name=PropertiesConfig
property.filename = logs
appenders = console, debugLoggerAppender, commonLoggerAppender, errorLoggerAppender, infoLoggerAppender


################################################
## CONSOLE APPENDER CONFIGURATION
################################################
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
# appender.console.layout.pattern=[%-5level] %d{dd MMM yyyy HH:mm:ss} [%t] %c{1} - %msg%n
# appender.console.layout.pattern=%d{dd-MM-yyyy HH:mm:ss} [%-5level] ([%thread])  - %msg  [%t] %logger.%M  %n
appender.console.layout.pattern= [%-5level] %d{dd-MM-yyyy HH:mm:ss} ([%thread])  - %msg %n

################################################
## COMMON APPENDER CONFIGURATION
################################################
appender.commonLoggerAppender.type = File
appender.commonLoggerAppender.name = RollingFile
appender.commonLoggerAppender.fileName=${filename}/alertsCommon.log
appender.commonLoggerAppender.layout.type=PatternLayout
appender.commonLoggerAppender.layout.pattern= [%-5level] %d{dd-MM-yyyy HH:mm:ss} ([%thread])  - %msg %n

################################################
## ERROR APPENDER CONFIGURATION
################################################
appender.errorLoggerAppender.type = RandomAccessFile
appender.errorLoggerAppender.name = RandomAccessFile
appender.errorLoggerAppender.fileName=${filename}/alertsError.log
appender.errorLoggerAppender.layout.type=PatternLayout
appender.errorLoggerAppender.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss} ([%thread]) %-5p %c{1}:%L - %m%n
#using LevelRangeFilter to only log error levels.
appender.errorLoggerAppender.filter.threshold.type = LevelRangeFilter
appender.errorLoggerAppender.filter.threshold.minLevel = error
appender.errorLoggerAppender.filter.threshold.maxLevel = error

################################################
## DEBUG APPENDER CONFIGURATION
################################################

appender.debugLoggerAppender.type = File
appender.debugLoggerAppender.name = DEBUGLOGFILE
appender.debugLoggerAppender.fileName=${filename}/alertsDebug.log
appender.debugLoggerAppender.layout.type=PatternLayout
appender.debugLoggerAppender.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss} ([%thread]) %-5p %c{1}:%L - %m%n
#using LevelRangeFilter to only log debug levels.
appender.debugLoggerAppender.filter.threshold.type = LevelRangeFilter
appender.debugLoggerAppender.filter.threshold.minLevel = debug
appender.debugLoggerAppender.filter.threshold.maxLevel = debug

################################################
## INFO APPENDER CONFIGURATION
################################################

appender.infoLoggerAppender.type = File
appender.infoLoggerAppender.name = INFOLOGFILE
appender.infoLoggerAppender.fileName=${filename}/alertsINFO.log
appender.infoLoggerAppender.layout.type=PatternLayout
appender.infoLoggerAppender.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} ([%thread]) [%t] %c{1} - %msg%n
#using LevelRangeFilter to only log info levels.
appender.infoLoggerAppender.filter.threshold.type = LevelRangeFilter
appender.infoLoggerAppender.filter.threshold.minLevel = info
appender.infoLoggerAppender.filter.threshold.maxLevel = info


# creating only one logger, we can use this with multiple appenders.
loggers=fileLogger
# this is package name. This package and all of it's child packages will use this logger
logger.fileLogger.name=com.safetynet.alerts
# logger base level
logger.fileLogger.level = debug
logger.fileLogger.appenderRefs = debugLoggerAppender, commonLoggerAppender, errorLoggerAppender, infoLoggerAppender
logger.fileLogger.appenderRef.debugLoggerAppender.ref = DEBUGLOGFILE
logger.fileLogger.appenderRef.commonLoggerAppender.ref = RollingFile
logger.fileLogger.appenderRef.errorLoggerAppender.ref = RandomAccessFile
logger.fileLogger.appenderRef.infoLoggerAppender.ref = INFOLOGFILE




################################################
## Configure root logger for logging error logs
##  in classes which are in package other than
##  above specified package
################################################
rootLogger.level = info
rootLogger.appenderRefs = stdout
rootLogger.appenderRef.stdout.ref = STDOUT
################################################
